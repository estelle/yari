<%

const locale = env.locale;
const sidebarURL = `/docs/Web/`;
const baseURL = `/${locale}/docs/`;

const l10nStrings = mdn.localStringMap({
  "en-US": {
    "Accessibility" : "Accessibility",
    "Guides" : "Guides",
        "Information_for_Web_authors" : "Information for web authors",
        "Accessibility:_What_users_can_to_to_browse_safely" : "User settings",
        "An_overview_of_accessible_web_applications_and_widgets" : "Applications and widgets",
        "Keyboard-navigable_JavaScript_widgets" : "Keyboard-navigable widgets",
        "Mobile_accessibility_checklist" : "Mobile checklist",
        "Understanding_WCAG" : "Understanding WCAG",
        "Cognitive_accessibility" : "Cognitive accessibility",
        "Accessibility_and_Spacial_Patterns" : "Spacial Patterns",
        "Understanding_Colors_and_Luminance" : "Colors and Luminance",
        "Seizure_disorders" : "Seizures and physical reactions",
    "Learn" : "Learn accessibility",
    "ARIA" : "ARIA",
    "ARIA_guides" : "ARIA guides",
        "Annotations" : "Annotations",
        "ARIA_Guides" : "Guides",
        "ARIA_Live_Regions" : "Live regions",
        "ARIA_Screen_Reader_Implementors_Guide" : "Screen reader implementors guide",
        "ARIA_Techniques" : "Using ARIA",
        "Multipart_labels" : "Multipart labels",
        "How_to_file_ARIA-related_bugs" : "How to file bugs",
    "ARIA states and properties": "ARIA states and properties",
    "ARIA roles": "ARIA roles",
    "WCAG": "WCAG",
  }
});

const sections = [
  {
    name: "Accessibility",
    link: "Web/Accessibility",
    subsections: [
      {
        name: "Guides",
        pages: [
          "Web/Accessibility/Information_for_Web_authors",
          "Web/Accessibility/Accessibility:_What_users_can_to_to_browse_safely",
          "Web/Accessibility/An_overview_of_accessible_web_applications_and_widgets",
          "Web/Accessibility/Keyboard-navigable_JavaScript_widgets",
          "Web/Accessibility/Mobile_accessibility_checklist",
          "Web/Accessibility/Understanding_WCAG",
          "Web/Accessibility/Cognitive_accessibility",
          "Web/Accessibility/Accessibility_and_Spacial_Patterns",
          "Web/Accessibility/Understanding_Colors_and_Luminance",
          "Web/Accessibility/Seizure_disorders",
        ]
      },
      {
        name: "Learn",
        pages: [
          "Learn/Accessibility/",
          "Learn/Accessibility/What_is_accessibility",
          "Learn/Accessibility/HTML",
          "Learn/Accessibility/CSS_and_JavaScript",
          "Learn/Accessibility/WAI-ARIA_basics",
          "Learn/Accessibility/Multimedia",
          "Learn/Accessibility/Mobile",
          "Learn/Accessibility/Accessibility_troubleshooting",
        ]
      },
      {
        name: "WCAG",
        subdirectory: "Web/Accessibility/Understanding_WCAG",
      }
    ]
  },
  {
    name: "ARIA",
    link: "Web/Accessibility/ARIA",
    subsections: [
      {
        name: "ARIA_guides",
        pages: [
          "Web/Accessibility/ARIA/Annotations",
          "Web/Accessibility/ARIA/ARIA_Guides",
          "Web/Accessibility/ARIA/ARIA_Live_Regions",
          "Web/Accessibility/ARIA/ARIA_Screen_Reader_Implementors_Guide",
          "Web/Accessibility/ARIA/ARIA_Techniques",
          "Web/Accessibility/ARIA/Multipart_labels",
          "Web/Accessibility/ARIA/How_to_file_ARIA-related_bugs",
        ]
      },
      {
        name: "ARIA states and properties",
        subdirectory: "Web/Accessibility/ARIA/attributes",
      },
      {
        name: "ARIA roles",
        subdirectory: "Web/Accessibility/ARIA/roles",
      }
    ]
  }
];

async function renderSubsection(subsection) {
  let output = `<li><details><summary>${l10nStrings[subsection.name]}</summary><ol>`;
  if (subsection.pages) {
    for (const page of subsection.pages) {
      const link = web.smartLink(`${baseURL}${page}`);
      output += `<li>${link}</li>`;
    }
  } else {
    output += await renderDirectory(subsection);
  }
  output += "</ol></details></li>";
  return output;
}


async function renderDirectory(subsection) {
  let directory = `${baseURL}${subsection.subdirectory}`;
  let output = await template("ListSubpagesForSidebar", [directory, true, true]);
  return output;
}


async function renderSection(section) {
  let output = `<li class="section"><a href="${baseURL}${section.link}">${l10nStrings[section.name]}</a></li>`;

  for (const subsection of section.subsections) {
    output += await renderSubsection(subsection);
  }

  return output;
}

async function renderSidebar() {
  let output = '<section id="Quick_links" data-macro="AccessibilitySidebar"><ol>';

  for (const section of sections) {
    output += await renderSection(section);
  }
  
  output += "</ol></section>";

  return output;
}

const output = await renderSidebar();

%>

<%-output%>
