<%

const locale = env.locale;
const sidebarURL = `/docs/Web/`;
const baseURL = `/${locale}/docs/Web/Accessibility/`;
const AriaURL = `/${locale}/docs/Web/Accessibility/ARIA/`;
const LearnURL = `/${locale}/docs/Learn/Accessibility/`;

const l10nStrings = mdn.localStringMap({
  "en-US": {
    "Accessibility" : "Accessibility",
    "Guides" : "Guides",
        "Information_for_Web_authors" : "Information for web authors",
        "Accessibility:_What_users_can_to_to_browse_safely" : "User settings",
        "An_overview_of_accessible_web_applications_and_widgets" : "Applications and widgets",
        "Keyboard-navigable_JavaScript_widgets" : "Keyboard-navigable widgets",
        "Mobile_accessibility_checklist" : "Mobile checklist",
        "Understanding_WCAG" : "Understanding WCAG",
        "Cognitive_accessibility" : "Cognitive accessibility",
        "Accessibility_and_Spacial_Patterns" : "Spacial Patterns",
        "Understanding_Colors_and_Luminance" : "Colors and Luminance",
        "Seizure_disorders" : "Seizures and physical reactions",
    "Resources" : "Resources",
        "What_is_accessibility" : "What is accessibility?",
        "HTML" : "HTML: A good basis for accessibility",
        "CSS_and_JavaScript" : "CSS and JavaScript accessibility best practices",
        "WAI-ARIA_basics" : "WAI-ARIA basics",
        "Multimedia" : "Accessible multimedia",
        "Mobile" : "Mobile accessibility",
    "ARIA" : "ARIA",
    "ARIA_guides" : "ARIA guides",
        "Annotations" : "Annotations",
        "ARIA_Guides" : "Guides",
        "ARIA_Live_Regions" : "Live regions",
        "ARIA_Screen_Reader_Implementors_Guide" : "Screen reader implementors guide",
        "ARIA_Techniques" : "Using ARIA",
        "Multipart_labels" : "Multipart labels",
        "How_to_file_ARIA-related_bugs" : "How to file bugs",
    "ARIA states and properties": "ARIA states and properties",
    "ARIA roles": "ARIA roles",
  }
});

const sections = [
  {
    name: "Accessibility",
    link: "Accessibility",
    subsections: [
      {
        name: "Guides",
        url: baseURL,
        pages: [
          "Information_for_Web_authors",
          "Accessibility:_What_users_can_to_to_browse_safely",
          "An_overview_of_accessible_web_applications_and_widgets",
          "Keyboard-navigable_JavaScript_widgets",
          "Mobile_accessibility_checklist",
          "Understanding_WCAG",
          "Cognitive_accessibility",
          "Accessibility_and_Spacial_Patterns",
          "Understanding_Colors_and_Luminance",
          "Seizure_disorders",
        ]
      },
      {
        name: "Resources",
        url: LearnURL,
        pages: [
          "What_is_accessibility",
          "HTML",
          "CSS_and_JavaScript",
          "WAI-ARIA_basics",
          "Multimedia",
          "Mobile",
        ]
      }
    ]
  },
  {
    name: "ARIA",
    link: "ARIA",
    subsections: [
      {
        name: "ARIA_guides",
        url: AriaURL,
        pages: [
          "Annotations",
          "ARIA_Guides",
          "ARIA_Live_Regions",
          "ARIA_Screen_Reader_Implementors_Guide",
          "ARIA_Techniques",
          "Multipart_labels",
          "How_to_file_ARIA-related_bugs",
        ]
      },
      {
        name: "ARIA states and properties",
        url: AriaURL,
        subdirectory: "attributes",
      },
      {
        name: "ARIA roles",
        url: AriaURL,
        subdirectory: "roles",
      }
    ]
  }
];

async function getTitle(pageSlug, URL) {
  let baseURL = URL? URL : baseURL;
  let page = await wiki.getPage(`${baseURL}${pageSlug}`);
  if (!page.title) {
    page = await wiki.getPage(`/en-US${sidebarURL}${pageSlug}`);
  }
  return mdn.htmlEscape(page.title);
}

async function renderSubsection(subsection) {
  let output = `<li><details><summary>${l10nStrings[subsection.name]}</summary><ol>`;
  if (subsection.pages) {
    let URL = subsection.url;
    for (const page of subsection.pages) {
      const link = web.smartLink(`${URL}${page}`, null, await getTitle(page, URL));
      output += `<li>${link}</li>`;
    }
  } else {
    output += await renderDirectory(subsection);
  }
  output += "</ol></details></li>";
  return output;
}


async function renderDirectory(subsection) {
  let directory = `${subsection.url}${subsection.subdirectory}`;
  let output = await template("ListSubpagesForSidebar", [directory, true, true]);
  return output;
}


async function renderSection(section) {
  let output = `<li><a href="${baseURL}${section.link}"><strong>${l10nStrings[section.name]}</strong></a></li>`;

  for (const subsection of section.subsections) {
    output += await renderSubsection(subsection);
  }

  return output;
}

async function renderSidebar() {
  let output = '<section id="Quick_links" data-macro="AccessibilitySidebar"><ol>';

  for (const section of sections) {
    output += await renderSection(section);
  }
  
  output += "</ol></section>";

  return output;
}

const output = await renderSidebar();

%>

<%-output%>
